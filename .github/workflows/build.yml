name: Build

on: push

jobs:
  build:
    strategy:
      matrix:
        os: [[self-hosted, nix, macOS], [self-hosted, nix, Linux]]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: om ci
      - name: Upload to cache
        run: nunu-upload-to-cache

  release:
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: "write"
    runs-on: [self-hosted, nix, Linux]
    needs: [build]
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      released: ${{ steps.get-version.outputs.released }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Release
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          nix run .#bump-version

      - name: Pull new tag
        run: |
          echo "Fetching new tags and commits..."
          git fetch --tags origin
          git pull origin main
          echo "Current HEAD:"
          git log -1 --oneline --decorate

      - name: Get version
        id: get-version
        run: |
          TAG=$(git describe --exact-match --tags HEAD 2>/dev/null || echo "")
          echo "Tag on HEAD: '$TAG'"

          if [ -n "$TAG" ] && [[ "$TAG" == v* ]]; then
            VERSION=$(echo "$TAG" | sed 's/^v//')
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "released=true" >> $GITHUB_OUTPUT
            echo "✓ Released version $VERSION"
          else
            echo "released=false" >> $GITHUB_OUTPUT
            echo "ℹ No release tag created (no version bump needed)"
          fi

  post-release-build-linux:
    if: github.ref == 'refs/heads/main' && needs.release.outputs.released == 'true'
    runs-on: [self-hosted, nix, Linux]
    needs: [release]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: v${{ needs.release.outputs.version }}

      - name: Build release artifacts
        run: nix build .#release-artifacts --refresh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-binaries-linux
          path: |
            result/bin/nunu-cli
            result/bin/nunu-cli.exe

  post-release-build-macos:
    if: github.ref == 'refs/heads/main' && needs.release.outputs.released == 'true'
    runs-on: [self-hosted, nix, macOS]
    needs: [release]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: v${{ needs.release.outputs.version }}

      - name: Build release artifacts
        run: nix build .#release-artifacts --refresh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-binaries-macos
          path: |
            result/bin/nunu-cli

  create-github-release:
    if: github.ref == 'refs/heads/main' && needs.release.outputs.released == 'true'
    permissions:
      contents: "write"
    runs-on: [self-hosted, nix, Linux]
    needs: [release, post-release-build-linux, post-release-build-macos]
    steps:
      - uses: actions/checkout@v4

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-binaries-linux
          path: artifacts

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-binaries-macos
          path: artifacts-macos

      - name: Rename artifacts with version
        run: |
          VERSION=${{ needs.release.outputs.version }}
          mv artifacts/nunu-cli artifacts/nunu-cli-linux-x86_64
          mv artifacts/nunu-cli.exe artifacts/nunu-cli-windows-x86_64.exe
          mv artifacts-macos/nunu-cli artifacts/nunu-cli-macos-x86_64

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.release.outputs.version }}
          name: Release v${{ needs.release.outputs.version }}
          draft: false
          prerelease: false
          files: |
            artifacts/nunu-cli-linux-x86_64
            artifacts/nunu-cli-windows-x86_64.exe
            artifacts/nunu-cli-macos-x86_64
          generate_release_notes: true
